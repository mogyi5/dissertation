# Generated by Django 2.2.3 on 2019-07-26 13:23

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
        ('myhealthdb', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.IntegerField(choices=[(1, 'patient'), (2, 'doctor'), (3, 'receptionist'), (4, 'admin')], null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('name', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('read', models.BooleanField(default=False)),
                ('file', models.FileField(upload_to='')),
                ('description', models.CharField(blank=True, max_length=256, null=True)),
                ('type', models.CharField(choices=[('Discharge Letter', 'Discharge Letter'), ('Lab Result', 'Lab Result'), ('Prescription', 'Prescription')], max_length=32)),
            ],
        ),
        migrations.CreateModel(
            name='Hospital',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('region', models.CharField(max_length=64)),
                ('type', models.CharField(choices=[('General Practice', 'General Practice'), ('General Hospital', 'General Hospital'), ('Specialized Hospital', 'Specialized Hospital')], max_length=64)),
                ('ad_line1', models.CharField(max_length=64)),
                ('ad_line2', models.CharField(blank=True, max_length=64, null=True)),
                ('ad_city', models.CharField(max_length=32)),
                ('ad_postcode', models.CharField(max_length=32)),
                ('ad_country', models.CharField(max_length=32)),
            ],
        ),
        migrations.CreateModel(
            name='PatientDoctor',
            fields=[
                ('primary', models.BooleanField()),
                ('pd_id', models.AutoField(primary_key=True, serialize=False)),
                ('inpatient', models.BooleanField(default=False)),
                ('note', models.CharField(blank=True, max_length=32, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Symptom',
            fields=[
                ('name', models.CharField(max_length=64, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('first_name', models.CharField(max_length=32)),
                ('last_name', models.CharField(max_length=32)),
                ('sex', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=32)),
                ('dob', models.DateField()),
                ('weight', models.DecimalField(blank=True, decimal_places=2, max_digits=255, null=True)),
                ('height', models.IntegerField(blank=True, null=True)),
                ('tel_no', models.CharField(blank=True, max_length=32, null=True)),
                ('nhs_no', models.CharField(blank=True, max_length=128, null=True, unique=True)),
                ('baseuser', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='patient', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('ad_line1', models.CharField(max_length=64)),
                ('ad_line2', models.CharField(blank=True, max_length=64, null=True)),
                ('ad_city', models.CharField(max_length=32)),
                ('ad_postcode', models.CharField(max_length=32)),
                ('ad_country', models.CharField(max_length=32)),
            ],
        ),
        migrations.CreateModel(
            name='Ward',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('type', models.CharField(max_length=32)),
                ('hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myhealthdb.Hospital')),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=32)),
                ('date_in', models.DateTimeField()),
                ('date_out', models.DateTimeField(blank=True, null=True)),
                ('type', models.CharField(choices=[('Surgery', 'Surgery'), ('Consultation', 'Consultation'), ('Imunization', 'Immunization'), ('Emergency', 'Emergency')], max_length=32)),
                ('notes', models.CharField(blank=True, max_length=256, null=True)),
                ('done', models.BooleanField(default=False)),
                ('letter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='myhealthdb.Document')),
                ('pd_relation', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='reversepd', to='myhealthdb.PatientDoctor')),
            ],
        ),
        migrations.CreateModel(
            name='SymptomsSet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('diagnosis', models.CharField(blank=True, max_length=256, null=True)),
                ('date', models.DateTimeField()),
                ('name', models.CharField(max_length=32)),
                ('severity', models.IntegerField(blank=True, null=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myhealthdb.Patient')),
            ],
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('first_name', models.CharField(max_length=32)),
                ('last_name', models.CharField(max_length=32)),
                ('tel_no', models.CharField(blank=True, max_length=32, null=True)),
                ('baseuser', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='doctor', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('ward', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='myhealthdb.Ward')),
            ],
            options={
                'verbose_name_plural': 'staff',
            },
        ),
        migrations.CreateModel(
            name='PatientEm',
            fields=[
                ('name', models.CharField(max_length=64)),
                ('email', models.CharField(blank=True, max_length=64, null=True)),
                ('phone1', models.CharField(max_length=64)),
                ('phone2', models.CharField(blank=True, max_length=64, null=True)),
                ('p_id', models.AutoField(primary_key=True, serialize=False)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='em_pat', to='myhealthdb.Patient')),
            ],
        ),
        migrations.AddField(
            model_name='patientdoctor',
            name='doctor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myhealthdb.Staff'),
        ),
        migrations.AddField(
            model_name='patientdoctor',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myhealthdb.Patient'),
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('name', models.CharField(max_length=128, primary_key=True, serialize=False)),
                ('description', models.CharField(blank=True, max_length=256, null=True)),
                ('slug', models.SlugField()),
                ('ad', models.ForeignKey(default=1, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='admin', to='myhealthdb.Staff')),
                ('members', models.ManyToManyField(to='myhealthdb.Staff')),
            ],
        ),
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('a_id', models.AutoField(primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField()),
                ('calories', models.IntegerField(blank=True, null=True)),
                ('type', models.CharField(choices=[('Run', 'Run'), ('Jog', 'Jog'), ('Walk', 'Walk'), ('Cycle', 'Cycle'), ('Swim', 'Swim')], max_length=32)),
                ('distance', models.IntegerField(blank=True, null=True)),
                ('distance_unit', models.CharField(blank=True, choices=[('m', 'm'), ('Km', 'Km'), ('Mi', 'Mi')], max_length=32, null=True)),
                ('patient', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='myhealthdb.Patient')),
            ],
            options={
                'verbose_name_plural': 'activities',
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('deadline', models.DateTimeField(primary_key=True, serialize=False)),
                ('notes', models.CharField(max_length=256)),
                ('complete', models.BooleanField()),
                ('name', models.CharField(max_length=32)),
                ('completed_by', models.ForeignKey(default='default@default.com', on_delete=django.db.models.deletion.SET_DEFAULT, to='myhealthdb.Staff')),
            ],
            options={
                'unique_together': {('deadline', 'name')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='patientdoctor',
            unique_together={('patient', 'doctor')},
        ),
        migrations.CreateModel(
            name='Medication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notes', models.CharField(blank=True, max_length=256, null=True)),
                ('type', models.CharField(max_length=64)),
                ('amount', models.CharField(blank=True, max_length=16, null=True)),
                ('frequency', models.CharField(max_length=64)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myhealthdb.Patient')),
            ],
            options={
                'unique_together': {('type', 'patient')},
            },
        ),
        migrations.CreateModel(
            name='Immunization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('end', models.DateField(blank=True, null=True)),
                ('type', models.CharField(choices=[('FLU', 'Influenza'), ('ZIK', 'Zika Virus')], max_length=64)),
                ('amount', models.CharField(max_length=32)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myhealthdb.Patient')),
            ],
            options={
                'unique_together': {('type', 'patient', 'date')},
            },
        ),
        migrations.CreateModel(
            name='Condition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.DateField()),
                ('stop', models.DateField(blank=True, null=True)),
                ('type', models.CharField(blank=True, choices=[('Allergy', 'Allergy'), ('Heart Condition', 'Heart Condition'), ('Blindness', 'Blindness'), ('Deaf', 'Deaf')], max_length=64, null=True)),
                ('reaction', models.CharField(max_length=64)),
                ('severity', models.IntegerField(blank=True, choices=[('Minor', 'Minor'), ('Low', 'Low'), ('Moderate', 'Moderate'), ('Very High', 'Very High'), ('Severe', 'Severe')], null=True)),
                ('details', models.CharField(blank=True, max_length=256, null=True)),
                ('title', models.CharField(max_length=32)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myhealthdb.Patient')),
            ],
            options={
                'unique_together': {('start', 'title', 'patient')},
            },
        ),
    ]
